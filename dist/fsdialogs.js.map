{
  "version": 3,
  "sources": ["../src/fsdialogs.ts"],
  "sourcesContent": ["\n/**\n * @author Alessandro Batisti <fenisoft@gmail.com>\n * @version 0.2.2\n */\n\nexport interface IModalButton {\n\tvalue: string,\n\ttext: string,\n\tclass?: string\n}\n\n\nexport interface IModalOptions {\n\theadClass?: string,\n\tcloseButton?: boolean,\n\twidth?: string,\n\tcloseOnEsc?: boolean,\n\tcontainer?: HTMLElement | null\n}\n\n\nexport interface IPromptOptions {\n\tinputType?: string,\n\theadClass?: string,\n\tshowClose?: boolean,\n\tmin?: string,\n\tmax?: string,\n\tstep?: string,\n\tbuttonOkClass?: string,\n\tbuttonCloseClass?: string,\n\tbuttonOkInnerHTML?: string,\n\tbuttonCloseInnerHTML?: string,\n\tinputClass?: string,\n\twidth?: string,\n\tplaceholder?: string\n\tcontainer?: HTMLElement | null\n}\n\nexport interface IPromptResult {\n\tbutton: string,\n\tvalue?: string\n}\n\n\n//import './fsdialogs.css';\n\nexport function fsAlert(bodyHtml: string, head: string = 'Alert') {\n\treturn fsDialog([{ text: 'OK', value: 'OK', class: 'btn btn-sm btn-danger' }], bodyHtml, head, { headClass: 'bg-danger text-white', closeButton: true, width: 'auto' });\n}\n\nexport function fsSuccess(bodyHtml: string, head: string = 'Success') {\n\treturn fsDialog([{ text: 'OK', value: 'OK', class: 'btn btn-sm btn-success' }], bodyHtml, head, { headClass: 'bg-success text-white', closeButton: true, width: 'auto' });\n}\n\n\n/**\n * \n * @param {IModalButton[]} buttons \n * @param {string} body  - body html\n * @param {string} head - head plain text\n * @param {IModalOptions} options \n * @returns {Promise <string>}  \n */\n\nexport function fsDialog(buttons: Array<IModalButton>, body: string, head: string, options: IModalOptions = {}): Promise<string> {\n\tif (options === null || options === undefined) {\n\t\toptions = {};\n\t}\n\n\tconst modalOptions: IModalOptions = { headClass: '', closeButton: false, closeOnEsc: false };\n\n\tif (options.headClass) {\n\t\tmodalOptions.headClass = options.headClass;\n\t}\n\n\tif (options.closeButton) {\n\t\tmodalOptions.closeButton = options.closeButton\n\t}\n\n\tif (options.container) {\n\t\tmodalOptions.container = options.container\n\t}\n\n\tif (options.closeOnEsc) {\n\t\tmodalOptions.closeOnEsc = options.closeOnEsc\n\t}\n\n\tlet width = '400px';\n\tif (options.width) {\n\t\twidth = options.width;\n\t}\n\n\tlet btns: Array<IModalButton> = [];\n\n\tif (buttons.length == 0) {\n\t\tbtns = [{ value: 'OK', text: 'OK', class: 'btn btn-sm btn-light' }];\n\t} else {\n\t\tfor (let b of buttons) {\n\t\t\tconst temp = {\n\t\t\t\tvalue: '',\n\t\t\t\ttext: '',\n\t\t\t\tclass: 'btn btn-sm'\n\t\t\t}\n\n\t\t\tif (b.value) {\n\t\t\t\ttemp.value = b.value;\n\t\t\t} else {\n\t\t\t\ttemp.value = 'OK';\n\t\t\t}\n\n\t\t\tif (b.text) {\n\t\t\t\ttemp.text = b.text;\n\t\t\t} else {\n\t\t\t\ttemp.text = b.value;\n\t\t\t}\n\n\t\t\tif (b.class) {\n\t\t\t\ttemp.class = b.class;\n\t\t\t} else {\n\t\t\t\ttemp.class = 'btn btn-sm'\n\t\t\t}\n\t\t\tbtns.push(temp);\n\t\t}\n\t}\n\n\n\tconst element = document.createElement('dialog');\n\telement.classList.add(\"fs-dialog-modal\");\n\tif (width != 'auto') {\n\t\telement.style.width = width;\n\t} else {\n\t\telement.classList.add('fs-dialog-auto');\n\t}\n\telement.innerHTML = htmlDialog(btns, body, head, modalOptions);\n\n\tif (modalOptions.container) {\n\t\t(modalOptions.container as HTMLElement)?.append(element);\n\t} else {\n\t\tdocument.body.append(element);\n\t}\n\n\treturn new Promise((resolve) => {\n\t\telement.showModal();\n\t\telement.addEventListener('cancel', event => {\n\t\t\tif (options.closeOnEsc) {\n\t\t\t\t// element.close();\n\t\t\t\telement.remove();\n\t\t\t\tresolve('ESC');\n\t\t\t} else {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tdocument.querySelectorAll(\".fs-close-modal\").forEach(button => {\n\t\t\tbutton.addEventListener('click', (event) => {\n\t\t\t\tconst r = (event.currentTarget as HTMLElement).dataset?.return;\n\t\t\t\telement.close();\n\t\t\t\telement.remove();\n\t\t\t\tif (r !== undefined) {\n\t\t\t\t\tresolve(r);\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t});\n}\n\n//\nfunction htmlDialog(buttons: Array<IModalButton>, body: string, head: string, options: IModalOptions) {\n\n\tconst htmlButtons = buttons.map(item => /*html*/`<button data-return=\"${item.value}\"\n\t\t\t\tclass=\"fs-close-modal ${item.class}\" type=\"button\">${item.text}</button>`).join(/*html*/`<span style=\"margin-left:4px\"></span>`);\n\n\tlet closeButton = '';\n\tif (options.closeButton) {\n\t\tcloseButton = /*html*/`<div class=\"fs-dialog-margin-auto\"></div>\n\t\t<div class=\"fs-close-modal\" role=\"button\" data-return=\"CLOSE\">&#10761;</div>`;\n\t}\n\treturn /*html*/`\n\t<div class=\"title ${options.headClass}\" >\n\t\t<div>${head}</div>\n\t\t${closeButton}\t    \n \t</div>  \n\n\t <div class=\"body\">\n\t\t${body}\n \t</div>\n \n\t<hr style=\"margin-top:0px;margin-bottom:0px;margin-left:4px;margin-right:4px; color:##eeeeee\">\n\t<div class=\"buttons\">\n\t\t<div class=\"fs-dialog-margin-auto\"></div>\n\t\t${htmlButtons}\n\t</div>\n\t`\n}\n\n\n\n//\n/**\n * \n * @param {string} value\n * @param {string} prompt \n * @param {string} head \n * @param {IPromptOptions} options \n * @returns {Promise<IPromptResult>}\n */\nexport function fsPrompt(value: string, prompt: string, head: string, options: IPromptOptions = {}): Promise<IPromptResult> {\n\tif (head === null || head === undefined) {\n\t\thead = '';\n\t}\n\n\tif (options === null || options === undefined || Object.keys(options).length === 0) {\n\t\toptions = {\n\t\t\tinputType: 'text',\n\t\t\theadClass: '',\n\t\t\tmin: '',\n\t\t\tmax: '',\n\t\t\tstep: '',\n\t\t\tbuttonOkInnerHTML: 'OK',\n\t\t\tbuttonCloseInnerHTML: 'CLOSE',\n\t\t\tbuttonOkClass: 'btn btn-primary btn-sm',\n\t\t\tbuttonCloseClass: 'btn btn-secondary btn-sm',\n\t\t\tinputClass: 'fs-dialog-input',\n\t\t\twidth: '400px',\n\t\t\tplaceholder: '',\n\t\t};\n\t}\n\n\n\n\tlet width = '400px'\n\tif (options.width) {\n\t\twidth = options.width;\n\t}\n\n\tconst valueId = `${new Date().getTime()}`;\n\tconst element = document.createElement('dialog');\n\n\telement.classList.add(\"fs-dialog-modal\");\n\tif (width != 'auto') {\n\t\telement.style.width = width;\n\t} else {\n\t\telement.classList.add('fs-dialog-auto');\n\t}\n\t//element.style.width = width;\n\telement.innerHTML = htmlPrompt(value, prompt, head, valueId, options);\n\n\n\tif (options.container) {\n\t\t(options.container as HTMLElement)?.append(element);\n\t} else {\n\t\tdocument.body.append(element);\n\t}\n\n\treturn new Promise((resolve) => {\n\t\tconst input = element.querySelector(`#v${valueId}`);\n\t\telement.showModal();\n\t\tif (input) {\n\t\t\tif ((input as HTMLInputElement).type != 'number') {\n\t\t\t\tconst end = (input as HTMLInputElement)?.value.length;\n\t\t\t\t(input as HTMLInputElement)?.setSelectionRange(end, end);\n\t\t\t\t(input as HTMLInputElement)?.focus();\n\t\t\t}\n\t\t}\n\t\tdocument.querySelector(`#form_${valueId}`)?.addEventListener('submit', event => {\n\t\t\tevent.preventDefault();\n\t\t\tconst el = document.getElementById(`v${valueId}`);\n\t\t\tconst value = (el as HTMLInputElement).value;\n\t\t\telement.close();\n\t\t\telement.remove();\n\t\t\tresolve({ button: 'OK', value });\n\t\t});\n\n\t\tdocument.querySelector(`#close_${valueId}`)?.addEventListener('click', event => {\n\t\t\telement.close();\n\t\t\telement.remove();\n\t\t\tresolve({ button: 'CLOSE' });\n\t\t});\n\n\t\telement.addEventListener('cancel', event => {\n\t\t\tresolve({ button: 'CLOSE' });\n\t\t});\n\t});\n}\n\n\n/**\n * \n * @param {string} value \n * @param {string} prompt \n * @param {string} head \n * @param {string} valueId \n * @param {IPromptOptions} options \n * @returns {string} \n */\nfunction htmlPrompt(value: string, prompt: string, head: string, valueId: string, options: IPromptOptions): string {\n\n\tconst modalOptions: IPromptOptions = {\n\t\tinputType: 'text',\n\t\theadClass: '',\n\t\tmin: '',\n\t\tmax: '',\n\t\tstep: '',\n\t\tbuttonOkInnerHTML: 'OK',\n\t\tbuttonCloseInnerHTML: 'CLOSE',\n\t\tbuttonOkClass: 'btn btn-primary btn-sm',\n\t\tbuttonCloseClass: 'btn btn-secondary btn-sm',\n\t\tinputClass: 'fs-dialog-input',\n\t\twidth: '400px',\n\t\tplaceholder: '',\n\t};\n\n\n\tif (options.buttonOkClass) {\n\t\tmodalOptions.buttonOkClass = options.buttonOkClass;\n\t}\n\n\tif (options.buttonCloseClass) {\n\t\tmodalOptions.buttonCloseClass = options.buttonCloseClass;\n\t}\n\n\tif (options.headClass) {\n\t\tmodalOptions.headClass = options.headClass;\n\t}\n\n\tif (options.placeholder) {\n\t\tmodalOptions.placeholder = options.placeholder;\n\t}\n\n\tif (options.inputType) {\n\t\tmodalOptions.inputType = options.inputType;\n\t}\n\n\tif (options.min) {\n\t\tmodalOptions.min = options.min;\n\t}\n\n\tif (options.max) {\n\t\tmodalOptions.max = options.max;\n\t}\n\n\tif (options.step) {\n\t\tmodalOptions.step = options.step;\n\t}\n\n\tif (options.buttonOkInnerHTML) {\n\t\tmodalOptions.buttonOkInnerHTML = options.buttonOkInnerHTML;\n\t}\n\n\tif (options.buttonCloseInnerHTML) {\n\t\tmodalOptions.buttonCloseInnerHTML = options.buttonCloseInnerHTML;\n\t}\n\n\tif (options.inputClass) {\n\t\tmodalOptions.inputClass = options.inputClass;\n\t}\n\n\n\tlet numberOptions = '';\n\tif (modalOptions.inputType == 'number') {\n\t\tif (value == '') {\n\t\t\tvalue = '0';\n\t\t}\n\n\t\tif (modalOptions.min) {\n\t\t\tnumberOptions += ` min=\"${modalOptions.min}\" `;\n\t\t}\n\t\tif (modalOptions.max) {\n\t\t\tnumberOptions += ` max=\"${modalOptions.max}\" `;\n\t\t}\n\t\tif (modalOptions.step) {\n\t\t\tnumberOptions += ` step=\"${modalOptions.step}\" `;\n\t\t}\n\t}\n\n\tlet placeholder = '';\n\tif (options.placeholder) {\n\t\tplaceholder = ` placeholder=\"${options.placeholder}\" `;\n\t}\n\n\tlet hiddenLabel = '';\n\tif (prompt === '') {\n\t\thiddenLabel = ' hidden ';\n\t}\n\n\n\treturn /*html*/`\n    <div class=\"title ${modalOptions.headClass}\">\n\t   ${head}\n\t</div>  \n\t\t\n\t<form id=\"form_${valueId}\">\n\t\t<div class=\"body\">\n\t\t\t<div class=\"mb-1\">\n\t\t\t\t<label for=\"v${valueId}\" ${hiddenLabel} >\n\t\t\t\t\t${prompt}\n\t\t\t\t</label>\n\t\t\t\t<input class=\"${modalOptions.inputClass}\"  type=\"${modalOptions.inputType}\" name=\"name_${valueId}\" required\n\t\t\t\t\t\t\tid=\"v${valueId}\" ${numberOptions} ${placeholder}\n\t\t\t\t\t\t\tvalue=\"${value}\"  maxlength=\"50\" />\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<div class=\"buttons\">\n\t\t\t<div class=\"fs-dialog-margin-auto\"></div>\n\t\t\t<button class=\"${modalOptions.buttonOkClass}\" type=\"submit\" >\n\t\t\t\t${modalOptions.buttonOkInnerHTML}\n\t\t\t</button>\n\t\t\t<button data-return=\"CLOSE\" type=\"button\" class=\"fs-dialog-ml-2 ${modalOptions.buttonCloseClass}\" id=\"close_${valueId}\">\n\t\t\t\t${modalOptions.buttonCloseInnerHTML}\n\t\t\t</button>\n\t\t</div>\n\t<form>\n</div>\n\t`;\n}"],
  "mappings": "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",
  "names": ["value"]
}
